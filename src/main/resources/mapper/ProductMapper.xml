<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.market_backend.Mapper.ProductMapper">
    <resultMap id="BaseResultMap" type="org.example.market_backend.Entity.Product">
            <id property="id" column="id" />
            <result property="name" column="name" />
            <result property="description" column="description" />
            <result property="price" column="price" />
            <result property="typeId" column="type_id" />
            <result property="userId" column="user_id" />
            <result property="address" column="address" />
            <result property="images" column="images" />
            <result property="status" column="status" />
            <result property="createTime" column="create_time" />
            <result property="updateTime" column="update_time" />
    </resultMap>

    <sql id="Base_Column_List">
        id,name,description,price,type_id,user_id,address,images,status,create_time,update_time
    </sql>

    <!-- Generated by MyBatis Generator -->
    <select id="selectProductList" parameterType="org.example.market_backend.VO.ProductSearchVO" resultType="org.example.market_backend.BO.ProductBO">
        SELECT
        p.id,
        p.product_imgs productImgs,
        p.product_desc productDesc,
        p.product_price productPrice, <!-- 修复字段拼写错误：pricre -> price -->
        p.product_type_id productTypeId,
        t.wantNum,
        pt.name productTypeName, <!-- 去掉多余的单引号 -->
        p.publish_user_id publishUserId,
        u.user_name publishUserName,
        u.user_avatar publishUserAvatar,
        o.buying_user_id buyingUserId,
        o.trade_status tradeStatus,
        p.create_time createTime,
        o.completion_time tradeTime,
        p.product_address productAddress
        FROM
        product p
        LEFT JOIN product_type pt ON p.product_type_id = pt.id
        LEFT JOIN `order` o ON p.id = o.product_id <!-- 使用反引号包裹 order 关键字 -->
        LEFT JOIN (SELECT COUNT(1) wantNum, product_id FROM chat c GROUP BY product_id) t ON p.id = t.product_id
        LEFT JOIN user u ON p.publish_user_id = u.user_id
        <where> <!-- 修复为小写 where -->
            <if test="productDesc != null and productDesc != ''">
                AND p.product_desc LIKE CONCAT('%', #{productDesc}, '%')
            </if>
            <if test="productTypeId != null">
                AND p.product_type_id = #{productTypeId}
            </if>
            AND (o.order_id IS NULL OR o.trade_status IN (1, 2)) <!-- 修复逻辑表达式 -->
        </where>
        GROUP BY p.id
        ORDER BY IFNULL(o.trade_status, 4) DESC, p.create_time DESC <!-- 修复 IFNULL 用法 -->
    </select>
    <!--商品详情-->
    <select id="selectProductDetail" parameterType="integer" resultType="org.example.market_backend.BO.ProductDetailBO">
        SELECT
            pro.publish_user_id publishUserId,
            us.user_name publishUserName,
            us.user_avatar publishUserAvatar,
            pro.crearte_time publishTime,
            IFNULL(pr.'status',2) praiseStatus,
            pro.id productId,
            pro.product_imgs productImgs,
            pro.product_desc productDesc,
            pro.product_price productPrice,
            pt.id productTypeId,
            pt.name productTypeName,
            t.wantNum,
            pro.product_address productAddress

        FROM
            product pro
            LEFT JOIN user us ON pro.publish_user_id = us.user_id
        LEFT JOIN (SELECT COUNT(1) wantNum, product_id FROM chat c GROUP BY product_id) t ON pro.id = t.product_id
        LEFT JOIN product_type pt ON pro.product_type_id = pt.id
        LEFT JOIN praise  pr ON pro.id = pr.product_id AND pr.user_id = #{userId}
        WHERE pro.id = #{productId}
    </select>
    <select id="selectBannerList" resultType="org.example.market_backend.BO.ProductBO">
        SELECT
            p.id,
            p.product_imgs productImgs,
            p.product_desc productDesc,
            p.product_price productPrice,
            p.product_type_id productTypeId,
            IFNULL(t.wantNum,0) wantNum,
            pt.name productTypeName,
            p.publish_user_id publishUserId,
            u.user_name publishUserName,
            u.user_avatar publishUserAvatar,
            p.create_time createTime,
            p.product_address productAddress
        FROM
            product p
            LEFT JOIN product_type pt ON p.product_type_id = pt.id
            LEFT JOIN order o ON p.id = o.product_id
            LEFT JOIN (SELECT COUNT(1) wantNum, product_id FROM chat c GROUP BY product_id) t ON p.id = t.product_id
            LEFT JOIN user u ON p.publish_user_id = u.user_id
        WHERE
            o.order_id IS NULL
            OR o.trade_status =2
        GROUP BY p.id
        ORDER BY t.wantNum DESC  LIMIT 5
    </select>
    <!---获取用户发布的商品列表-->
    <select id="selectMyProductList" resultType="org.example.market_backend.BO.ProductBO">
        SELECT
            p.id,
            p.product_imgs productImgs,
            p.product_desc productDesc,
            p.product_price productPrice,
            p.product_type_id productTypeId,
            t.wantNum,
            pt.name productTypeName,
            p.publish_user_id publishUserId,
            u.user_name publishUserName,
            u.user_avatar publishUserAvatar,
            o.buying_user_id buyingUserId,
            o.trade_status tradeStatus,
            p.create_time createTime,
            o.completion_time tradeTime,
            o.order_id orderId,
            p.product_address productAddress
        FROM
            product p
            LEFT JOIN product_type pt ON p.product_type_id = pt.id
            LEFT JOIN `order` o ON p.id = o.product_id
            LEFT JOIN (SELECT COUNT(1) wantNum, product_id FROM chat c GROUP BY product_id) t ON p.id = t.product_id
            LEFT JOIN user u ON p.publish_user_id = u.user_id
        WHERE
            <if test="type != null and type==1">
                and p.publish_user_id = #{userId}
                and (o.order_id IS NULL OR o.trade_status =2)
            </if>
            <if test="type != null and type==2">
                and p.publish_user_id = #{userId}
                and o.selling_status = 1
                and o.trade_status in (1,3)
            </if>
            <if test="type !=null and type==3">
                and o.buying_user_id = #{userId}
                and o.buying_status = 1
                and o.trade_status in (1,3)
            </if>
        GROUP BY p.id
        <if test="type != null and type==1">
        order by p.create_time DESC
        </if>
        <if test="type !=null and type!=1">
            order by o.completion_time DESC
        </if>
    </select>
    <select id="selectProductNum">
        SELECT
            IFNULL(SUM(CASE WHEN p.publish_user_id = #{userId} AND o.trade_status = 2 OR o.order_id IS NULL )THEN 1 ELSE 0 END),0) publishNum,
            IFNULL(SUM(CASE WHEN p.publish_user_id = #{userId} AND (o.trade_status = 2 OR o.order_id IS NULL )THEN p.product_price ELSE 0 END),0.00) publishAmount,
            IFNULL(SUM(CASE WHEN p.publish_user_id = #{userId} AND( o.trade_status  in(1,3) AND  o.selling_status = 1  )THEN 1 ELSE 0 END),0) salename,
            IFNULL(SUM(CASE WHEN p.publish_user_id = #{userId} AND (o.trade_status in(1,3) AND o.selling_status = 1 )THEN p.product_price ELSE 0 END),0.00) saleAmount,
            IFNULL(SUM(CASE WHEN o.buying_user_id = #{userId} AND o.trade_status in(1,3) AND o.buying_status = 1  THEN 1 ELSE 0 END),0) purchaseNum,
            IFNULL(SUM(CASE WHEN o.buying_user_id = #{userId} AND o.trade_status  in(1,3) AND o.buying_status=1 THEN p.product_price ELSE 0 END ),0.00) purchaseAmount
        FROM
            product p
            LEFT JOIN (t1 . * FROM order t1
            INNER JOIN (SELECT MAX(order_id) max_order_id,o.* FROM order o GROUP BY product_id)
        t2 ON t1.order_id = t2.max_order_id)
        o ON o.product_id = p.id
    </select>
</mapper>
