<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.market_backend.Mapper.OrderMapper">

    <resultMap id="BaseResultMap" type="org.example.market_backend.Entity.Order">
            <id property="id" column="id" />
            <result property="orderNo" column="order_no" />
            <result property="userId" column="user_id" />
            <result property="productId" column="product_id" />
            <result property="productName" column="product_name" />
            <result property="productImg" column="product_img" />
            <result property="productPrice" column="product_price" />
            <result property="addressId" column="address_id" />
            <result property="status" column="status" />
            <result property="createTime" column="create_time" />
            <result property="updateTime" column="update_time" />
    </resultMap>

    <sql id="Base_Column_List">
        id,order_no,user_id,product_id,product_name,product_img,product_price,
        address_id,status,create_time,update_time
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from order
        where  id = #{id} 
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from order
        where  id = #{id} 
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="org.example.market_backend.Entity.Order" useGeneratedKeys="true">
        insert into order
        ( id,order_no,user_id,product_id,product_name,product_img,product_price,
        address_id,status,create_time,update_time)
        values (#{id},#{orderNo},#{userId},#{productId},#{productName},#{productImg},#{productPrice},
        #{addressId},#{status},#{createTime},#{updateTime})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="org.example.market_backend.Entity.Order" useGeneratedKeys="true">
        insert into order
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="orderNo != null">order_no,</if>
                <if test="userId != null">user_id,</if>
                <if test="productId != null">product_id,</if>
                <if test="productName != null">product_name,</if>
                <if test="productImg != null">product_img,</if>
                <if test="productPrice != null">product_price,</if>
                <if test="addressId != null">address_id,</if>
                <if test="status != null">status,</if>
                <if test="createTime != null">create_time,</if>
                <if test="updateTime != null">update_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id},</if>
                <if test="orderNo != null">#{orderNo},</if>
                <if test="userId != null">#{userId},</if>
                <if test="productId != null">#{productId},</if>
                <if test="productName != null">#{productName},</if>
                <if test="productImg != null">#{productImg},</if>
                <if test="productPrice != null">#{productPrice},</if>
                <if test="addressId != null">#{addressId},</if>
                <if test="status != null">#{status},</if>
                <if test="createTime != null">#{createTime},</if>
                <if test="updateTime != null">#{updateTime},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="org.example.market_backend.Entity.Order">
        update order
        <set>
                <if test="orderNo != null">
                    order_no = #{orderNo},
                </if>
                <if test="userId != null">
                    user_id = #{userId},
                </if>
                <if test="productId != null">
                    product_id = #{productId},
                </if>
                <if test="productName != null">
                    product_name = #{productName},
                </if>
                <if test="productImg != null">
                    product_img = #{productImg},
                </if>
                <if test="productPrice != null">
                    product_price = #{productPrice},
                </if>
                <if test="addressId != null">
                    address_id = #{addressId},
                </if>
                <if test="status != null">
                    status = #{status},
                </if>
                <if test="createTime != null">
                    create_time = #{createTime},
                </if>
                <if test="updateTime != null">
                    update_time = #{updateTime},
                </if>
        </set>
        where   id = #{id} 
    </update>
    <update id="updateByPrimaryKey" parameterType="org.example.market_backend.Entity.Order">
        update order
        set 
            order_no =  #{orderNo},
            user_id =  #{userId},
            product_id =  #{productId},
            product_name =  #{productName},
            product_img =  #{productImg},
            product_price =  #{productPrice},
            address_id =  #{addressId},
            status =  #{status},
            create_time =  #{createTime},
            update_time =  #{updateTime}
        where   id = #{id} 
    </update>
</mapper>
